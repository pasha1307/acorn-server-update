inactive: 1,
                editCounter: 0,
                nonDigitalImagesExist: 0,
                isBeingEdited: 1,
                editedById: 3,
                curatorId: ctx.request.body.curatorId,
                approvingCuratorId: ctx.request.body.approvingCuratorId,
                manuallyClosed: 0,
                chargeToId: ctx.request.body.chargeToId
            });
            const Item = await ctx.db.items.create({
                formatId: ctx.request.body.formatId,
                coordinatorId: ctx.request.body.coordinatorId,
                isNonCollectionMaterial: ctx.request.body.isNonCollectionMaterial,
                fund: ctx.request.body.fund,
                insuranceValue: ctx.request.body.insuranceValue,
                fundMemo: ctx.request.body.fundMemo,
                authorArtist: ctx.request.body.authorArtist,
                dateOfObject: ctx.request.body.dateOfObject,
                editCounter: 0,
                hollisNumber: ctx.request.body.hollisNumber,
                collectionName: ctx.request.body.collectionName,
                storage: ctx.request.body.storage,
                expectedDateOfReturn: ctx.request.body.expectedDateOfReturn
            });
            ctx.body = await ctx.db.combinedrecords.create({
                recordType: ctx.request.body.recordType,
                recordId: Item.itemId,
                identificationId: Ident.identificationId,
                purposeId: Ident.purposeId,
                homeLocationId: Ident.homeLocationId,
                chargeToId: Ident.chargeToId,
                title: Ident.title,
                departmentId: Ident.departmentId,
                groupId: Ident.groupId,
                projectId: Ident.projectId,
                comments: Ident.comments,
                inactive: Ident.inactive,
                editCounter: Ident.editCounter,
                nonDigitalImagesExist: Ident.nonDigitalImagesExist,
                isBeingEdited: Ident.isBeingEdited,
                editedBy: Ident.editedBy,
                approvingCuratorId: Ident.approvingCuratorId,
                formatId: Item.formatId,
                coordinatorId: Item.coordinatorId,
                isNonCollectionMaterial: Item.isNonCollectionMaterial,
                expectedDateOfReturn: Item.expectedDateOfReturn,
                insuranceValue: Item.insuranceValue,
                fundMemo: Item.fundMemo,
                authorArtist: Item.authorArtist,
                dateOfObject: Item.dateOfObject,
                hollisNumber: Item.hollisNumber,
                storage: Item.storage,
                manuallyClosed: Item.manuallyClosed,
                manuallyClosedDate: Item.manuallyClosedDate,